openapi: 3.0.3
info:
  title: Laravel
  description: ''
  version: 1.0.0
servers:
  -
    url: 'http://localhost'
paths:
  '/api/users/{user}':
    get:
      summary: ''
      operationId: getApiUsersUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: ab
        required: true
        schema:
          type: string
  /api/v1/login:
    post:
      summary: ''
      operationId: postApiV1Login
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: katarina67@example.net
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: '.S/ZG#,efME0gXN/'
                full_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jopeiv
                photo_url:
                  type: string
                  description: ''
                  example: 'https://www.davis.biz/debitis-maiores-cupiditate-sequi-delectus-eos-incidunt'
              required:
                - email
                - password
      security: []
  /api/v1/register:
    post:
      summary: ''
      operationId: postApiV1Register
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  description: 'Must be a valid email address.'
                  example: ekuhn@example.com
                password:
                  type: string
                  description: 'Must be at least 6 characters.'
                  example: d|T>QxzNqb>a%2b==v;
                full_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qvzvukyefowekwenfqph
                photo_url:
                  type: string
                  description: ''
                  example: 'http://white.com/quos-ut-laudantium-eos'
              required:
                - email
                - password
      security: []
  /api/login/google:
    get:
      summary: 'Redirect the user to the Provider authentication page.'
      operationId: redirectTheUserToTheProviderAuthenticationPage
      description: ''
      parameters: []
      responses:
        302:
          description: ''
          content:
            text/plain:
              schema:
                type: string
                example: "<!DOCTYPE html>\n<html>\n    <head>\n        <meta charset=\"UTF-8\" />\n        <meta http-equiv=\"refresh\" content=\"0;url='https://accounts.google.com/o/oauth2/auth?client_id=434014513875-favlgkdqulm08efo9mujdsn1gg0dsr1k.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code'\" />\n\n        <title>Redirecting to https://accounts.google.com/o/oauth2/auth?client_id=434014513875-favlgkdqulm08efo9mujdsn1gg0dsr1k.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code</title>\n    </head>\n    <body>\n        Redirecting to <a href=\"https://accounts.google.com/o/oauth2/auth?client_id=434014513875-favlgkdqulm08efo9mujdsn1gg0dsr1k.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code\">https://accounts.google.com/o/oauth2/auth?client_id=434014513875-favlgkdqulm08efo9mujdsn1gg0dsr1k.apps.googleusercontent.com&amp;redirect_uri=http%3A%2F%2F127.0.0.1%3A8000%2Fapi%2Flogin%2Fgoogle%2Fcallback&amp;scope=openid+profile+email&amp;response_type=code</a>.\n    </body>\n</html>"
      tags:
        - Endpoints
      security: []
  /api/login/google/callback:
    get:
      summary: 'Obtain the user information from Provider.'
      operationId: obtainTheUserInformationFromProvider
      description: ''
      parameters: []
      responses:
        500:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'Server Error'
                properties:
                  message:
                    type: string
                    example: 'Server Error'
      tags:
        - Endpoints
      security: []
  /api/v1/logout:
    post:
      summary: ''
      operationId: postApiV1Logout
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
  /api/admin/statistics:
    get:
      summary: ''
      operationId: getApiAdminStatistics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/users:
    get:
      summary: ''
      operationId: getApiAdminUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/admin/organizations:
    get:
      summary: ''
      operationId: getApiAdminOrganizations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/teams:
    get:
      summary: ''
      operationId: getApiV1Teams
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Teams
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qltklrittlagakp
                description:
                  type: string
                  description: ''
                  example: 'Dolores nemo beatae harum ut aut fuga possimus.'
              required:
                - name
      security: []
  '/api/v1/teams/{team}':
    get:
      summary: ''
      operationId: getApiV1TeamsTeam
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TeamsTeam
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ucinhex
                description:
                  type: string
                  description: ''
                  example: 'Consequatur illum fuga alias neque assumenda dicta.'
                owner_id:
                  type: string
                  description: ''
                  example: null
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TeamsTeam
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: team
        description: 'The team.'
        example: eligendi
        required: true
        schema:
          type: string
  /api/v1/tasks:
    get:
      summary: ''
      operationId: getApiV1Tasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Tasks
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ''
                  example: null
                milestone_id:
                  type: string
                  description: ''
                  example: null
                stage_id:
                  type: string
                  description: ''
                  example: null
                on_tracking:
                  type: boolean
                  description: ''
                  example: true
                task_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gaptzfxkilksrvlgkcea
                description:
                  type: string
                  description: ''
                  example: 'Error consequatur doloribus dolorem placeat id.'
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:27'
                due_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:27'
                task_category:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: aoclf
                work_hour_required:
                  type: integer
                  description: ''
                  example: 13
                work_hour:
                  type: integer
                  description: ''
                  example: 7
                status:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: oifjirgtdiorpr
                priority:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: vbewx
                severity:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yukkjsyurtxcdiiidz
                tag:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lcgr
                assignee_id:
                  type: string
                  description: ''
                  example: null
                assignee_dates:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:27'
                complete:
                  type: boolean
                  description: ''
                  example: false
                complete_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:27'
              required:
                - task_name
                - start_date
                - due_date
                - task_category
                - work_hour_required
                - status
                - priority
                - severity
      security: []
  '/api/v1/tasks/{task}':
    get:
      summary: ''
      operationId: getApiV1TasksTask
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task
        description: 'The task.'
        example: in
        required: true
        schema:
          type: string
  '/api/v1/tasks/{task_id}':
    put:
      summary: ''
      operationId: putApiV1TasksTask_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ''
                  example: null
                milestone_id:
                  type: string
                  description: ''
                  example: null
                stage_id:
                  type: string
                  description: ''
                  example: null
                owner_id:
                  type: string
                  description: ''
                  example: null
                on_tracking:
                  type: boolean
                  description: ''
                  example: true
                task_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: blbiacnvb
                description:
                  type: string
                  description: ''
                  example: 'Mollitia sed quibusdam dolor eius eligendi error maiores ad.'
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:28'
                due_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:28'
                task_category:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: regocy
                work_hour_required:
                  type: integer
                  description: ''
                  example: 11
                work_hour:
                  type: integer
                  description: ''
                  example: 4
                status:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: higefzphycvfqgfknpfcyju
                priority:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zbehjln
                severity:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zfzbybsexpeutjoykuh
                tag:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: llvtvqcferlwdtoxkv
                assignee_id:
                  type: string
                  description: ''
                  example: null
                assignee_dates:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:28'
                complete:
                  type: boolean
                  description: ''
                  example: false
                complete_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:28'
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TasksTask_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: task_id
        description: 'The ID of the task.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/tasks-by-owner:
    get:
      summary: ''
      operationId: getApiV1TasksByOwner
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/tasks-by-assignee:
    get:
      summary: ''
      operationId: getApiV1TasksByAssignee
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  '/api/v1/tasks-by-project-id/{id}':
    get:
      summary: ''
      operationId: getApiV1TasksByProjectIdId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the tasks by project id.'
        example: ipsa
        required: true
        schema:
          type: string
  /api/v1/user-tasks:
    get:
      summary: ''
      operationId: getApiV1UserTasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/my-tasks:
    get:
      summary: ''
      operationId: getApiV1MyTasks
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/projects:
    get:
      summary: 'Display a listing of the resource.'
      operationId: displayAListingOfTheResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: 'Store a newly created resource in storage.'
      operationId: storeANewlyCreatedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: egjhhoatgalaulbkwjpucoqqd
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:31'
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2064-09-13'
                organization_id:
                  type: string
                  description: ''
                  example: null
                project_status:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: bjoltjderorxgzelgghyrzvp
                project_priority:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: xzturtuqq
              required:
                - project_name
                - start_date
                - end_date
                - project_status
                - project_priority
      security: []
  '/api/v1/projects/{project}':
    get:
      summary: 'Display the specified resource.'
      operationId: displayTheSpecifiedResource
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project
        description: 'The project.'
        example: est
        required: true
        schema:
          type: string
  '/api/v1/projects/{project_id}':
    put:
      summary: 'Update the specified resource in storage.'
      operationId: updateTheSpecifiedResourceInStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                project_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ecqkqlheedlfytybkjjrhyyzj
                owner_id:
                  type: string
                  description: ''
                  example: null
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:33'
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2121-12-22'
                organization_id:
                  type: string
                  description: ''
                  example: null
                project_status:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: gtpikztvyibqa
                project_priority:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: fdjmqhpezglyauwhmxdpzfqe
      security: []
    delete:
      summary: 'Remove the specified resource from storage.'
      operationId: removeTheSpecifiedResourceFromStorage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: project_id
        description: 'The ID of the project.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/projects-by-owner:
    get:
      summary: ''
      operationId: getApiV1ProjectsByOwner
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/projects-by-member:
    get:
      summary: ''
      operationId: getApiV1ProjectsByMember
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/user-projects:
    get:
      summary: ''
      operationId: getApiV1UserProjects
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/milestones:
    get:
      summary: ''
      operationId: getApiV1Milestones
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Milestones
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                milestone_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: slnzboottozyvcifoct
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:36'
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2048-01-12'
              required:
                - milestone_name
                - start_date
                - end_date
      security: []
  '/api/v1/milestones/{milestone}':
    get:
      summary: ''
      operationId: getApiV1MilestonesMilestone
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: milestone
        description: 'The milestone.'
        example: omnis
        required: true
        schema:
          type: string
  '/api/v1/milestones/{milestone_id}':
    put:
      summary: ''
      operationId: putApiV1MilestonesMilestone_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                milestone_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: oubbjhducbvjqbnajrbmrx
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:37'
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2058-02-02'
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1MilestonesMilestone_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: milestone_id
        description: 'The ID of the milestone.'
        example: 3
        required: true
        schema:
          type: integer
  /api/v1/project-stages:
    get:
      summary: ''
      operationId: getApiV1ProjectStages
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ProjectStages
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ''
                  example: voluptas
                stage_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: lfmrivijekep
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:38'
                period:
                  type: integer
                  description: ''
                  example: 6
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2119-10-22'
                completed:
                  type: boolean
                  description: ''
                  example: false
                completion_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2099-02-24'
              required:
                - project_id
                - stage_name
                - start_date
                - period
                - end_date
      security: []
  '/api/v1/project-stages/{projectstage}':
    get:
      summary: ''
      operationId: getApiV1ProjectStagesProjectstage
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProjectStagesProjectstage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                stage_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: wg
                start_date:
                  type: string
                  description: 'Must be a valid date.'
                  example: '2024-06-29T06:35:38'
                period:
                  type: integer
                  description: ''
                  example: 6
                end_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2101-05-15'
                completed:
                  type: boolean
                  description: ''
                  example: false
                completion_date:
                  type: string
                  description: 'Must be a valid date. Must be a date after or equal to <code>start_date</code>.'
                  example: '2032-02-11'
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProjectStagesProjectstage
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: projectstage
        description: ''
        example: temporibus
        required: true
        schema:
          type: string
  /api/v1/project-members:
    get:
      summary: ''
      operationId: getApiV1ProjectMembers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1ProjectMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ''
                  example: labore
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: tbyhdgrinepebyggmwycove
              required:
                - project_id
                - role
      security: []
  '/api/v1/project-members/{prjectmember}':
    get:
      summary: ''
      operationId: getApiV1ProjectMembersPrjectmember
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1ProjectMembersPrjectmember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: null
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: jmmxarmz
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1ProjectMembersPrjectmember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: prjectmember
        description: ''
        example: dolores
        required: true
        schema:
          type: string
  '/api/v1/project-members-by-project-id/{id}':
    get:
      summary: ''
      operationId: getApiV1ProjectMembersByProjectIdId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the project members by project id.'
        example: ab
        required: true
        schema:
          type: string
  /api/v1/add-project-members:
    post:
      summary: ''
      operationId: postApiV1AddProjectMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                project_id:
                  type: string
                  description: ''
                  example: labore
                members:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: 'Must be a valid email address.'
                        example: zcrooks@example.org
                      role:
                        type: string
                        description: ''
                        example: et
                    required:
                      - email
                      - role
              required:
                - project_id
                - members
      security: []
  /api/v1/team-members:
    get:
      summary: ''
      operationId: getApiV1TeamMembers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1TeamMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ''
                  example: fuga
                user_id:
                  type: string
                  description: ''
                  example: impedit
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: snuwxnkhwltwkftfj
              required:
                - team_id
                - user_id
                - role
      security: []
  '/api/v1/team-members/{id}':
    get:
      summary: ''
      operationId: getApiV1TeamMembersId
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1TeamMembersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ''
                  example: null
                user_id:
                  type: string
                  description: ''
                  example: null
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: yilxvwkicn
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1TeamMembersId
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: id
        description: 'The ID of the team member.'
        example: est
        required: true
        schema:
          type: string
  /api/v1/goals:
    get:
      summary: ''
      operationId: getApiV1Goals
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Goals
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ''
                  example: expedita
                goal_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: drgubigduyzhnfvsrever
                description:
                  type: string
                  description: ''
                  example: 'Soluta omnis et est sit voluptas.'
                completed:
                  type: boolean
                  description: ''
                  example: true
              required:
                - team_id
                - goal_name
      security: []
  '/api/v1/goals/{goal}':
    get:
      summary: ''
      operationId: getApiV1GoalsGoal
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: goal
        description: 'The goal.'
        example: non
        required: true
        schema:
          type: string
  '/api/v1/goals/{goal_id}':
    put:
      summary: ''
      operationId: putApiV1GoalsGoal_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                team_id:
                  type: string
                  description: ''
                  example: null
                goal_name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: snocljpsmhhvpvpnafygzzfvw
                description:
                  type: string
                  description: ''
                  example: 'Quis eum architecto esse impedit.'
                completed:
                  type: boolean
                  description: ''
                  example: false
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1GoalsGoal_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: goal_id
        description: 'The ID of the goal.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/organizations:
    get:
      summary: ''
      operationId: getApiV1Organizations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1Organizations
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: arjhgkjxhyrjwqx
                description:
                  type: string
                  description: ''
                  example: 'Consectetur voluptatem nihil sunt harum perferendis sunt ratione et.'
                industry:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: qbzwganffqdtjqsohojc
                email:
                  type: string
                  description: 'Must be a valid email address. Must not be greater than 255 characters.'
                  example: daniel.augustus@example.net
              required:
                - name
      security: []
  '/api/v1/organizations/{organization}':
    get:
      summary: ''
      operationId: getApiV1OrganizationsOrganization
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: organization
        description: 'The organization.'
        example: provident
        required: true
        schema:
          type: string
  '/api/v1/organizations/{organization_id}':
    delete:
      summary: ''
      operationId: deleteApiV1OrganizationsOrganization_id
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: organization_id
        description: 'The ID of the organization.'
        example: 1
        required: true
        schema:
          type: integer
  /api/v1/organizations-by-owner:
    get:
      summary: ''
      operationId: getApiV1OrganizationsByOwner
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/organizations-by-member:
    get:
      summary: ''
      operationId: getApiV1OrganizationsByMember
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/user-organizations:
    get:
      summary: ''
      operationId: getApiV1UserOrganizations
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/add-organizations-members:
    post:
      summary: ''
      operationId: postApiV1AddOrganizationsMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  description: ''
                  example: dolores
                members:
                  type: array
                  description: ''
                  example:
                    - []
                  items:
                    type: object
                    properties:
                      email:
                        type: string
                        description: 'Must be a valid email address.'
                        example: rath.grover@example.com
                      role:
                        type: string
                        description: ''
                        example: ut
                    required:
                      - email
                      - role
              required:
                - org_id
                - members
      security: []
  /api/v1/org-members:
    get:
      summary: ''
      operationId: getApiV1OrgMembers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    post:
      summary: ''
      operationId: postApiV1OrgMembers
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  description: ''
                  example: omnis
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: zotmzbumxkgjsuh
                is_admin:
                  type: boolean
                  description: ''
                  example: false
                assigned_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 9
                completed_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 5
                overdue_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 14
                worked_hour:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 38
              required:
                - org_id
                - role
      security: []
  '/api/v1/org-members/{org-member}':
    get:
      summary: ''
      operationId: getApiV1OrgMembersOrgMember
      description: ''
      parameters: []
      responses:
        404:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: 'The route api/v1/org-members/impedit could not be found.'
                properties:
                  message:
                    type: string
                    example: 'The route api/v1/org-members/impedit could not be found.'
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1OrgMembersOrgMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                org_id:
                  type: string
                  description: ''
                  example: null
                role:
                  type: string
                  description: 'Must not be greater than 255 characters.'
                  example: ygimowsxm
                is_admin:
                  type: boolean
                  description: ''
                  example: false
                assigned_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 21
                completed_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 22
                overdue_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 2
                worked_hour:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 30
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1OrgMembersOrgMember
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: org-member
        description: ''
        example: impedit
        required: true
        schema:
          type: string
  /api/v1/organization-metrics:
    post:
      summary: ''
      operationId: postApiV1OrganizationMetrics
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                organization_id:
                  type: string
                  description: ''
                  example: quaerat
                total_users:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 34
                active_users:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 76
                projects_created:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 76
                projects_completed:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 62
                projects_in_progress:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 13
                average_project_completion_time:
                  type: number
                  description: 'Must be at least 0.'
                  example: 87
                total_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 9
                completed_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 55
                tasks_in_progress:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 43
                tasks_overdue:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 28
                average_task_completion_time:
                  type: number
                  description: 'Must be at least 0.'
                  example: 27
              required:
                - organization_id
                - total_users
                - active_users
                - projects_created
                - projects_completed
                - projects_in_progress
                - average_project_completion_time
                - total_tasks
                - completed_tasks
                - tasks_in_progress
                - tasks_overdue
                - average_task_completion_time
      security: []
  '/api/v1/organization-metrics/{organizationmetric}':
    get:
      summary: ''
      operationId: getApiV1OrganizationMetricsOrganizationmetric
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
    put:
      summary: ''
      operationId: putApiV1OrganizationMetricsOrganizationmetric
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                total_users:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 18
                active_users:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 42
                projects_created:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 59
                projects_completed:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 12
                projects_in_progress:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 42
                average_project_completion_time:
                  type: number
                  description: 'Must be at least 0.'
                  example: 12
                total_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 19
                completed_tasks:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 44
                tasks_in_progress:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 27
                tasks_overdue:
                  type: integer
                  description: 'Must be at least 0.'
                  example: 20
                average_task_completion_time:
                  type: number
                  description: 'Must be at least 0.'
                  example: 23
              required:
                - total_users
                - active_users
                - projects_created
                - projects_completed
                - projects_in_progress
                - average_project_completion_time
                - total_tasks
                - completed_tasks
                - tasks_in_progress
                - tasks_overdue
                - average_task_completion_time
      security: []
    delete:
      summary: ''
      operationId: deleteApiV1OrganizationMetricsOrganizationmetric
      description: ''
      parameters: []
      responses: {  }
      tags:
        - Endpoints
      security: []
    parameters:
      -
        in: path
        name: organizationmetric
        description: ''
        example: tempora
        required: true
        schema:
          type: string
  /api/v1/dashboard/task-status-metrics:
    get:
      summary: ''
      operationId: getApiV1DashboardTaskStatusMetrics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/dashboard/task-priority-metrics:
    get:
      summary: ''
      operationId: getApiV1DashboardTaskPriorityMetrics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/dashboard/task-due-date-metrics:
    get:
      summary: ''
      operationId: getApiV1DashboardTaskDueDateMetrics
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - Endpoints
      security: []
  /api/v1/users:
    get:
      summary: 'Get all users'
      operationId: getAllUsers
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User management'
      security: []
  '/api/v1/users/{user}':
    get:
      summary: 'Display a specific user.'
      operationId: displayASpecificUser
      description: ''
      parameters: []
      responses:
        401:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  message: Unauthenticated.
                properties:
                  message:
                    type: string
                    example: Unauthenticated.
      tags:
        - 'User management'
      security: []
    delete:
      summary: 'Delete a specific user.'
      operationId: deleteASpecificUser
      description: ''
      parameters: []
      responses:
        200:
          description: ''
          content:
            application/json:
              schema:
                type: object
                example:
                  success: true
                  data:
                    message: 'User deleted successfully'
                properties:
                  success:
                    type: boolean
                    example: true
                  data:
                    type: object
                    properties:
                      message:
                        type: string
                        example: 'User deleted successfully'
      tags:
        - 'User management'
      security: []
    parameters:
      -
        in: path
        name: user
        description: 'The user.'
        example: eaque
        required: true
        schema:
          type: string
      -
        in: path
        name: id
        description: 'The ID of the user.'
        example: '1'
        required: true
        schema:
          type: string
tags:
  -
    name: Endpoints
    description: ''
  -
    name: 'User management'
    description: "\nAPIs for managing users"
